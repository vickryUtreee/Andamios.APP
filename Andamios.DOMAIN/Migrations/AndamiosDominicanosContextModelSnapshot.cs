// <auto-generated />
using System;
using Andamios.DOMAIN.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Andamios.DOMAIN.Migrations
{
    [DbContext(typeof(AndamiosDominicanosContext))]
    partial class AndamiosDominicanosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdbalanceCc", b =>
                {
                    b.Property<int>("CcbalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CCBalID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CcbalBalStatus")
                        .IsRequired()
                        .HasColumnName("CCBalBalStatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int>("CcbalClienteId")
                        .HasColumnName("CCBalClienteID");

                    b.Property<int>("CcbalCotiId")
                        .HasColumnName("CCBalCotiID");

                    b.Property<string>("CcbalFactClas")
                        .IsRequired()
                        .HasColumnName("CCBalFactClas")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int>("CcbalFactId")
                        .HasColumnName("CCBalFactID");

                    b.Property<string>("CcbalFactTipo")
                        .IsRequired()
                        .HasColumnName("CCBalFactTipo")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<decimal>("CcbalMontoFact")
                        .HasColumnName("CCBalMontoFact")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("CcbalProyectoId")
                        .HasColumnName("CCBalProyectoID");

                    b.Property<decimal>("CcbalRecibidoFact")
                        .HasColumnName("CCBalRecibidoFact")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("CcbalId");

                    b.HasIndex("CcbalClienteId", "CcbalProyectoId", "CcbalCotiId", "CcbalFactId", "CcbalFactTipo", "CcbalFactClas")
                        .IsUnique()
                        .HasName("UC_DDBalanceCC");

                    b.ToTable("DDBalanceCC");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.Ddbanco", b =>
                {
                    b.Property<decimal>("CcbancoId")
                        .HasColumnName("CCBancoID")
                        .HasColumnType("decimal(2, 0)");

                    b.Property<string>("CcbancoDescripcion")
                        .IsRequired()
                        .HasColumnName("CCBancoDescripcion")
                        .HasMaxLength(75)
                        .IsUnicode(false);

                    b.Property<string>("CcbancoEstatus")
                        .IsRequired()
                        .HasColumnName("CCBancoEstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime>("CcbancoFechaCrea")
                        .HasColumnName("CCBancoFechaCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CcbancoFechaMod")
                        .HasColumnName("CCBancoFechaMod")
                        .HasColumnType("datetime");

                    b.Property<string>("CcbancoNumCta")
                        .IsRequired()
                        .HasColumnName("CCBancoNumCta")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("CcbancoTipoCta")
                        .IsRequired()
                        .HasColumnName("CCBancoTipoCta")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("CcbancoUsuCrea")
                        .IsRequired()
                        .HasColumnName("CCBancoUsuCrea")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("CcbancoUsuMod")
                        .IsRequired()
                        .HasColumnName("CCBancoUsuMod")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("CcbancoId");

                    b.ToTable("DDBanco");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdclaseProd", b =>
                {
                    b.Property<short>("ClaProdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ClaProdID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaProdCtrlInventario")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("ClaProdDesc")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ClaProdEstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ClaProdFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ClaProdFechaModifica")
                        .HasColumnType("datetime");

                    b.Property<string>("ClaProdUsuarioCreacion")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ClaProdUsuarioModifica")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("ClaProdId");

                    b.ToTable("DDClaseProd");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.Ddcliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ClienteID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClienteCodigoVendedor")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ClienteContacto")
                        .HasMaxLength(75)
                        .IsUnicode(false);

                    b.Property<string>("ClienteContactoCel1")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ClienteContactoCel2")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ClienteCorreoElec")
                        .HasMaxLength(75)
                        .IsUnicode(false);

                    b.Property<string>("ClienteDescripcion")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("ClienteDireccion")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("ClienteEstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ClienteFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ClienteFechaModifica")
                        .HasColumnType("datetime");

                    b.Property<string>("ClienteGerente")
                        .HasMaxLength(75)
                        .IsUnicode(false);

                    b.Property<string>("ClienteGestorCobros")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<int?>("ClienteRegion");

                    b.Property<int?>("ClienteSector");

                    b.Property<string>("ClienteTelFax")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ClienteTelOf1")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ClienteTelOf2")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ClienteTipo")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<decimal?>("ClienteTipoComprobante")
                        .HasColumnType("numeric(2, 0)");

                    b.Property<string>("ClienteTipoId")
                        .HasColumnName("ClienteTipoID")
                        .HasMaxLength(11)
                        .IsUnicode(false);

                    b.Property<string>("ClienteUsuarioModifica")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ClienteUsuarioRegistro")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("ClienteId");

                    b.ToTable("DDCliente");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdconDespDet", b =>
                {
                    b.Property<int>("ConDespDetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ConDespDetID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConDespDetCantOrd");

                    b.Property<string>("ConDespDetProdId")
                        .HasColumnName("ConDespDetProdID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("ConDespEnDetId")
                        .HasColumnName("ConDespEnDetID");

                    b.HasKey("ConDespDetId");

                    b.HasIndex("ConDespDetProdId");

                    b.HasIndex("ConDespEnDetId");

                    b.ToTable("DDConDespDet");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdconDespEnc", b =>
                {
                    b.Property<int>("ConDespEnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ConDespEnID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ConDespEnCliId")
                        .HasColumnName("ConDespEnCliID");

                    b.Property<int>("ConDespEnConteoId")
                        .HasColumnName("ConDespEnConteoID");

                    b.Property<int>("ConDespEnCotiId")
                        .HasColumnName("ConDespEnCotiID");

                    b.Property<string>("ConDespEnEstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ConDespEnFechaEmision")
                        .HasColumnType("datetime");

                    b.Property<string>("ConDespEnOrdenC")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<int>("ConDespEnProyectoId")
                        .HasColumnName("ConDespEnProyectoID");

                    b.Property<string>("ConDespEnTipo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("ConDespEnUsuarioCrea")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("ConDespEnId");

                    b.HasIndex("ConDespEnCliId");

                    b.HasIndex("ConDespEnCotiId");

                    b.HasIndex("ConDespEnProyectoId");

                    b.ToTable("DDConDespEnc");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdconDevoDet", b =>
                {
                    b.Property<int>("ConDevoDetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ConDevoDetID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConDevoCantidad");

                    b.Property<int?>("ConDevoDetEnId")
                        .HasColumnName("ConDevoDetEnID");

                    b.Property<string>("ConDevoProdId")
                        .HasColumnName("ConDevoProdID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ConDevoDetId");

                    b.HasIndex("ConDevoDetEnId");

                    b.HasIndex("ConDevoProdId");

                    b.ToTable("DDConDevoDet");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdconDevoEnc", b =>
                {
                    b.Property<int>("ConDevoEnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ConDevoEnID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ConDevoEnCliId")
                        .HasColumnName("ConDevoEnCliID");

                    b.Property<int>("ConDevoEnContId")
                        .HasColumnName("ConDevoEnContID");

                    b.Property<int>("ConDevoEnCotiId")
                        .HasColumnName("ConDevoEnCotiID");

                    b.Property<string>("ConDevoEnEstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int>("ConDevoEnProyectoId")
                        .HasColumnName("ConDevoEnProyectoID");

                    b.Property<string>("ConDevoEnTipo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ConDevoFechaEmision")
                        .HasColumnType("datetime");

                    b.Property<string>("ConDevoOrdenC")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("ConDevoUsuarioCrea")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("ConDevoEnId");

                    b.HasIndex("ConDevoEnCliId");

                    b.HasIndex("ConDevoEnContId");

                    b.HasIndex("ConDevoEnCotiId");

                    b.HasIndex("ConDevoEnProyectoId");

                    b.ToTable("DDConDevoEnc");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdconteoDespDet", b =>
                {
                    b.Property<int>("ContDespDetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ContDespDetID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContDespCantProdOrd");

                    b.Property<int?>("ContDespCantProyecto");

                    b.Property<int?>("ContDespDetEncId")
                        .HasColumnName("ContDespDetEncID");

                    b.Property<string>("ContDespProdId")
                        .HasColumnName("ContDespProdID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ContDespDetId")
                        .HasName("PK_DDConteoDespDetalle");

                    b.HasIndex("ContDespDetEncId");

                    b.HasIndex("ContDespProdId");

                    b.ToTable("DDConteoDespDet");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdconteoDespEnc", b =>
                {
                    b.Property<int>("ContDespEncId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ContDespEncID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContDespEncClienteId")
                        .HasColumnName("ContDespEncClienteID");

                    b.Property<int>("ContDespEncCotiId")
                        .HasColumnName("ContDespEncCotiID");

                    b.Property<string>("ContDespEncEstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ContDespEncFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ContDespEncFechaModifica")
                        .HasColumnType("datetime");

                    b.Property<string>("ContDespEncOrden")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<int>("ContDespEncProyectoId")
                        .HasColumnName("ContDespEncProyectoID");

                    b.Property<string>("ContDespEncUserCrea")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ContDespEncUserModifica")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("ContDespEncId");

                    b.HasIndex("ContDespEncClienteId");

                    b.HasIndex("ContDespEncCotiId");

                    b.HasIndex("ContDespEncProyectoId");

                    b.ToTable("DDConteoDespEnc");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdconteoDevoDet", b =>
                {
                    b.Property<int>("ContDevoDetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ContDevoDetID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContDevoCantProdOrd");

                    b.Property<int?>("ContDevoCantProyecto");

                    b.Property<int?>("ContDevoDetEncId")
                        .HasColumnName("ContDevoDetEncID");

                    b.Property<string>("ContDevoProdId")
                        .HasColumnName("ContDevoProdID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ContDevoDetId");

                    b.HasIndex("ContDevoDetEncId");

                    b.HasIndex("ContDevoProdId");

                    b.ToTable("DDConteoDevoDet");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdconteoDevoEnc", b =>
                {
                    b.Property<int>("ContDevoEncId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ContDevoEncID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContDevoEncClienteId")
                        .HasColumnName("ContDevoEncClienteID");

                    b.Property<int>("ContDevoEncCoti");

                    b.Property<string>("ContDevoEncEstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ContDevoEncFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ContDevoEncFechaModifica")
                        .HasColumnType("datetime");

                    b.Property<int?>("ContDevoEncOrden");

                    b.Property<int>("ContDevoEncProyectoId")
                        .HasColumnName("ContDevoEncProyectoID");

                    b.Property<string>("ContDevoEncUsuCreacion")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ContDevoEncUsuModifica")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("ContDevoEncId");

                    b.HasIndex("ContDevoEncClienteId");

                    b.HasIndex("ContDevoEncCoti");

                    b.HasIndex("ContDevoEncProyectoId");

                    b.ToTable("DDConteoDevoEnc");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdcontrolBal", b =>
                {
                    b.Property<int>("BalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BalID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BalCantDevuelta");

                    b.Property<int?>("BalCantOrdenada");

                    b.Property<int?>("BalCantRecibida");

                    b.Property<int>("BalClienteId")
                        .HasColumnName("BalClienteID");

                    b.Property<int>("BalCotiId")
                        .HasColumnName("BalCotiID");

                    b.Property<string>("BalProdId")
                        .IsRequired()
                        .HasColumnName("BalProdID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int>("BalProyectoId")
                        .HasColumnName("BalProyectoID");

                    b.HasKey("BalId");

                    b.HasIndex("BalCotiId");

                    b.HasIndex("BalProdId");

                    b.HasIndex("BalProyectoId");

                    b.HasIndex("BalClienteId", "BalProyectoId", "BalCotiId", "BalProdId")
                        .IsUnique()
                        .HasName("UC_DDControlBal");

                    b.ToTable("DDControlBal");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdcontrolFact", b =>
                {
                    b.Property<DateTime>("CtrlGenFactura")
                        .HasColumnType("date");

                    b.HasKey("CtrlGenFactura");

                    b.ToTable("DDControlFact");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdcotiDetalle", b =>
                {
                    b.Property<int>("CotiDeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CotiDeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CotiCantProd");

                    b.Property<int?>("CotiEnDeId")
                        .HasColumnName("CotiEnDeID");

                    b.Property<decimal?>("CotiPrecioProd")
                        .HasColumnType("money");

                    b.Property<string>("CotiProdId")
                        .HasColumnName("CotiProdID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<decimal?>("CotiValorProd")
                        .HasColumnType("money");

                    b.HasKey("CotiDeId");

                    b.HasIndex("CotiEnDeId")
                        .HasName("ix_coti_encabezado");

                    b.HasIndex("CotiProdId");

                    b.ToTable("DDCotiDetalle");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdcotiEncabezado", b =>
                {
                    b.Property<int>("CotiEnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CotiEnID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CotiEnClas")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<int>("CotiEnClienteId")
                        .HasColumnName("CotiEnClienteID");

                    b.Property<string>("CotiEnCondicionPago")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("CotiEnDescripcion")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<decimal?>("CotiEnDescuento")
                        .HasColumnType("decimal(2, 2)");

                    b.Property<short?>("CotiEnDias");

                    b.Property<string>("CotiEnEstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CotiEnFechaActivacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CotiEnFechaAnulacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CotiEnFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<string>("CotiEnImpuesto")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("CotiEnOrden")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<decimal?>("CotiEnPorDeposito")
                        .HasColumnType("decimal(2, 2)");

                    b.Property<int>("CotiEnProyectoId")
                        .HasColumnName("CotiEnProyectoID");

                    b.Property<string>("CotiEnTipo")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("CotiEnTransporte")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CotiEnUsuarioActivacion")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("CotiEnUsuarioAnulacion")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("CotiEnUsuarioCreacion")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("CotiEnUsuarioVendedor")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("CotiEnId");

                    b.HasIndex("CotiEnClienteId");

                    b.HasIndex("CotiEnProyectoId");

                    b.ToTable("DDCotiEncabezado");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DddepositoBal", b =>
                {
                    b.Property<int>("CcdepBalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CCDepBalID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CcdepBalAplicado")
                        .HasColumnName("CCDepBalAplicado")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("CcdepBalCliId")
                        .HasColumnName("CCDepBalCliID");

                    b.Property<decimal>("CcdepBalMonto")
                        .HasColumnName("CCDepBalMonto")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("CcdepBalProyectoId")
                        .HasColumnName("CCDepBalProyectoID");

                    b.HasKey("CcdepBalId");

                    b.HasIndex("CcdepBalCliId");

                    b.HasIndex("CcdepBalProyectoId");

                    b.ToTable("DDDepositoBal");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DddepositoBco", b =>
                {
                    b.Property<int>("CcdepositoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CCDepositoID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CcdepositoBanco")
                        .HasColumnName("CCDepositoBanco")
                        .HasColumnType("decimal(2, 0)");

                    b.Property<decimal>("CcdepositoCheque")
                        .HasColumnName("CCDepositoCheque")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CcdepositoEfectivo")
                        .HasColumnName("CCDepositoEfectivo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("CcdepositoEstatus")
                        .IsRequired()
                        .HasColumnName("CCDepositoEstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime>("CcdepositoFecha")
                        .HasColumnName("CCDepositoFecha")
                        .HasColumnType("date");

                    b.Property<decimal>("CcdepositoTarjeta")
                        .HasColumnName("CCDepositoTarjeta")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CcdepositoTransferencia")
                        .HasColumnName("CCDepositoTransferencia")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("CcdepositoId")
                        .HasName("PK_DDDepositoCC");

                    b.HasIndex("CcdepositoBanco");

                    b.HasIndex("CcdepositoFecha", "CcdepositoBanco")
                        .IsUnique()
                        .HasName("UC_DDDepositoCC");

                    b.ToTable("DDDepositoBco");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DddepositoCoti", b =>
                {
                    b.Property<int>("CcdepReciboId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CCDepReciboID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CcdepCotiCheque")
                        .HasColumnName("CCDepCotiCheque")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CcdepCotiEfectivo")
                        .HasColumnName("CCDepCotiEfectivo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CcdepCotiTarjetaCredito")
                        .HasColumnName("CCDepCotiTarjetaCredito")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CcdepCotiTransferencia")
                        .HasColumnName("CCDepCotiTransferencia")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("CcdepReciboCliId")
                        .HasColumnName("CCDepReciboCliID");

                    b.Property<int>("CcdepReciboOrigId")
                        .HasColumnName("CCDepReciboOrigID");

                    b.Property<int>("CcdepReciboProyectoId")
                        .HasColumnName("CCDepReciboProyectoID");

                    b.HasKey("CcdepReciboId");

                    b.HasIndex("CcdepReciboCliId");

                    b.HasIndex("CcdepReciboOrigId");

                    b.HasIndex("CcdepReciboProyectoId");

                    b.ToTable("DDDepositoCoti");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DddetalleReciboCc", b =>
                {
                    b.Property<int>("CcdetalleReciboId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CCDetalleReciboID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CcdetalleFacturaId")
                        .HasColumnName("CCDetalleFacturaID");

                    b.Property<string>("CcdetalleReciboAltMov")
                        .IsRequired()
                        .HasColumnName("CCDetalleReciboAltMov")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<int>("CcdetalleReciboAltSec")
                        .HasColumnName("CCDetalleReciboAltSec");

                    b.Property<decimal>("CcdetalleReciboMonto")
                        .HasColumnName("CCDetalleReciboMonto")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("CcreciboId")
                        .HasColumnName("CCReciboID");

                    b.HasKey("CcdetalleReciboId");

                    b.HasIndex("CcdetalleReciboAltMov");

                    b.HasIndex("CcreciboId");

                    b.ToTable("DDDetalleReciboCC");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdfactDet", b =>
                {
                    b.Property<int>("FactDetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FactDetID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FactDetCantProd");

                    b.Property<decimal?>("FactDetMonto")
                        .HasColumnType("money");

                    b.Property<string>("FactDetProdId")
                        .HasColumnName("FactDetProdID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("FactEnDetId")
                        .HasColumnName("FactEnDetID");

                    b.HasKey("FactDetId");

                    b.HasIndex("FactDetProdId");

                    b.HasIndex("FactEnDetId");

                    b.ToTable("DDFactDet");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdfactEnc", b =>
                {
                    b.Property<int>("FactEnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FactEnID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FactEnClase")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int>("FactEnClienteId")
                        .HasColumnName("FactEnClienteID");

                    b.Property<int>("FactEnConduceId")
                        .HasColumnName("FactEnConduceID");

                    b.Property<int>("FactEnCotiId")
                        .HasColumnName("FactEnCotiID");

                    b.Property<decimal?>("FactEnDescGlobal")
                        .HasColumnType("decimal(2, 2)");

                    b.Property<int?>("FactEnDias");

                    b.Property<string>("FactEnEstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("FactEnFechaConteo")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FactEnFechaEmision")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FactEnFechaValida")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("FactEnImpuesto")
                        .HasColumnType("decimal(2, 2)");

                    b.Property<string>("FactEnNumeroComprobante")
                        .HasMaxLength(11)
                        .IsUnicode(false);

                    b.Property<string>("FactEnOrden")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<int>("FactEnProyectoId")
                        .HasColumnName("FactEnProyectoID");

                    b.Property<string>("FactEnTipo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<decimal>("FactEnTipoComprobante")
                        .HasColumnType("numeric(2, 0)");

                    b.Property<string>("FactEnUsuarioCrea")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("FactEnVendedor")
                        .IsRequired()
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("FactEnId");

                    b.HasIndex("FactEnClienteId");

                    b.HasIndex("FactEnConduceId");

                    b.HasIndex("FactEnCotiId");

                    b.HasIndex("FactEnProyectoId");

                    b.HasIndex("FactEnTipoComprobante");

                    b.ToTable("DDFactEnc");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdingInvDet", b =>
                {
                    b.Property<int>("TraDeIngId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TraDeIngID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TraDeCantidad");

                    b.Property<decimal?>("TraDeCosto")
                        .HasColumnType("decimal(7, 2)");

                    b.Property<int>("TraDeEnIngId")
                        .HasColumnName("TraDeEnIngID");

                    b.Property<string>("TraDeProdId")
                        .IsRequired()
                        .HasColumnName("TraDeProdID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("TraDeIngId");

                    b.HasIndex("TraDeEnIngId");

                    b.HasIndex("TraDeProdId");

                    b.ToTable("DDIngInvDet");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdingInvEnc", b =>
                {
                    b.Property<int>("TraEnIngId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TraEnIngID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TraEnCodAgeId")
                        .HasColumnName("TraEnCodAgeID");

                    b.Property<int?>("TraEnCodSupId")
                        .HasColumnName("TraEnCodSupID");

                    b.Property<string>("TraEnFactAge")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("TraEnFecCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TraEnFecFactAge")
                        .HasColumnType("date");

                    b.Property<string>("TraEnNumEmbarque")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("TraEnOrdenCompra")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("TraEnUsuCrea")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("TraEnIngId");

                    b.HasIndex("TraEnCodAgeId");

                    b.HasIndex("TraEnCodSupId");

                    b.ToTable("DDIngInvEnc");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdmaeInventario", b =>
                {
                    b.Property<string>("MinvId")
                        .HasColumnName("MInvID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<short?>("MinvClase")
                        .HasColumnName("MInvClase");

                    b.Property<decimal?>("MinvCostoAdquisicion")
                        .HasColumnName("MInvCostoAdquisicion")
                        .HasColumnType("money");

                    b.Property<string>("MinvDescripcion")
                        .HasColumnName("MInvDescripcion")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("MinvEstatus")
                        .HasColumnName("MInvEstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("MinvFechaCreacion")
                        .HasColumnName("MInvFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("MinvFechaModifica")
                        .HasColumnName("MInvFechaModifica")
                        .HasColumnType("datetime");

                    b.Property<string>("MinvPeso")
                        .HasColumnName("MInvPeso")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MinvPiezaServicio")
                        .HasColumnName("MInvPiezaServicio")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<decimal?>("MinvPrecioRentaDia")
                        .HasColumnName("MInvPrecioRentaDia")
                        .HasColumnType("money");

                    b.Property<decimal?>("MinvPrecioRentaFija")
                        .HasColumnName("MInvPrecioRentaFija")
                        .HasColumnType("money");

                    b.Property<decimal?>("MinvPrecioVenta")
                        .HasColumnName("MInvPrecioVenta")
                        .HasColumnType("money");

                    b.Property<string>("MinvRutaImagen")
                        .HasColumnName("MInvRutaImagen")
                        .HasMaxLength(350)
                        .IsUnicode(false);

                    b.Property<int?>("MinvTotalIngresado")
                        .HasColumnName("MInvTotalIngresado");

                    b.Property<int?>("MinvTotalOrdenado")
                        .HasColumnName("MInvTotalOrdenado");

                    b.Property<int?>("MinvTotalRentado")
                        .HasColumnName("MInvTotalRentado");

                    b.Property<string>("MinvUnidad")
                        .HasColumnName("MInvUnidad")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MinvUsuarioCreacion")
                        .HasColumnName("MInvUsuarioCreacion")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MinvUsuarioModifica")
                        .HasColumnName("MInvUsuarioModifica")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("MinvId");

                    b.HasIndex("MinvClase");

                    b.ToTable("DDMaeInventario");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdmovimientoCc", b =>
                {
                    b.Property<string>("CcmovId")
                        .HasColumnName("CCMovID")
                        .HasMaxLength(3)
                        .IsUnicode(false);

                    b.Property<string>("CcmovDesc")
                        .IsRequired()
                        .HasColumnName("CCMovDesc")
                        .HasMaxLength(75)
                        .IsUnicode(false);

                    b.Property<string>("CcmovEstatus")
                        .IsRequired()
                        .HasColumnName("CCMovEstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime>("CcmovFechaCrea")
                        .HasColumnName("CCMovFechaCrea")
                        .HasColumnType("datetime");

                    b.Property<string>("CcmovUsuCrea")
                        .IsRequired()
                        .HasColumnName("CCMovUsuCrea")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("CcmovId");

                    b.ToTable("DDMovimientoCC");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdpagoNoAp", b =>
                {
                    b.Property<int>("CcpagoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CCPagoID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CcpagoCheque")
                        .HasColumnName("CCPagoCheque")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("CcpagoClienteId")
                        .HasColumnName("CCPagoClienteID");

                    b.Property<decimal>("CcpagoEfectivo")
                        .HasColumnName("CCPagoEfectivo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<DateTime>("CcpagoFecha")
                        .HasColumnName("CCPagoFecha")
                        .HasColumnType("datetime");

                    b.Property<int>("CcpagoProyectoId")
                        .HasColumnName("CCPagoProyectoID");

                    b.Property<int>("CcpagoReciboId")
                        .HasColumnName("CCPagoReciboID");

                    b.Property<decimal>("CcpagoTarjetaCredito")
                        .HasColumnName("CCPagoTarjetaCredito")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CcpagoTransferencia")
                        .HasColumnName("CCPagoTransferencia")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("CcpagoId");

                    b.HasIndex("CcpagoClienteId");

                    b.HasIndex("CcpagoProyectoId");

                    b.HasIndex("CcpagoReciboId");

                    b.ToTable("DDPagoNoAp");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.Ddproyecto", b =>
                {
                    b.Property<int>("ProId")
                        .HasColumnName("ProID");

                    b.Property<int>("ProClienteId")
                        .HasColumnName("ProClienteID");

                    b.Property<string>("ProContacto")
                        .HasMaxLength(75)
                        .IsUnicode(false);

                    b.Property<string>("ProCorreoContacto")
                        .HasMaxLength(75)
                        .IsUnicode(false);

                    b.Property<decimal?>("ProDescuentoGlobal")
                        .HasColumnType("decimal(2, 2)");

                    b.Property<string>("ProDireccion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ProFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ProFechaModifica")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ProFechaProyecto")
                        .HasColumnType("date");

                    b.Property<string>("ProNombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("ProTelContacto")
                        .HasMaxLength(10);

                    b.Property<string>("ProUsuarioCreacion")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ProUsuarioModifica")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ProVendedorId")
                        .IsRequired()
                        .HasColumnName("ProVendedorID")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("ProId");

                    b.HasIndex("ProClienteId");

                    b.ToTable("DDProyecto");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdreciboCc", b =>
                {
                    b.Property<int>("CcreciboId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CCReciboID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CcreciboCheque")
                        .HasColumnName("CCReciboCheque")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("CcreciboCliId")
                        .HasColumnName("CCReciboCliID");

                    b.Property<string>("CcreciboConcepto")
                        .IsRequired()
                        .HasColumnName("CCReciboConcepto")
                        .HasMaxLength(450)
                        .IsUnicode(false);

                    b.Property<decimal>("CcreciboEfectivo")
                        .HasColumnName("CCReciboEfectivo")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("CcreciboEstatus")
                        .IsRequired()
                        .HasColumnName("CCReciboEstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime>("CcreciboFecCrea")
                        .HasColumnName("CCReciboFecCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CcreciboFecMod")
                        .HasColumnName("CCReciboFecMod")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("CcreciboFecha")
                        .HasColumnName("CCReciboFecha")
                        .HasColumnType("date");

                    b.Property<decimal>("CcreciboTarjetaCredito")
                        .HasColumnName("CCReciboTarjetaCredito")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("CcreciboTransferencia")
                        .HasColumnName("CCReciboTransferencia")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("CcreciboUsuCrea")
                        .IsRequired()
                        .HasColumnName("CCReciboUsuCrea")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("CcreciboUsuMod")
                        .IsRequired()
                        .HasColumnName("CCReciboUsuMod")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("CcreciboId");

                    b.HasIndex("CcreciboCliId");

                    b.ToTable("DDReciboCC");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.Ddsuplidor", b =>
                {
                    b.Property<int>("SuplidorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SuplidorID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SuplidorContacto")
                        .HasMaxLength(75)
                        .IsUnicode(false);

                    b.Property<string>("SuplidorContactoTelCel")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("SuplidorCorreoElec")
                        .HasMaxLength(75)
                        .IsUnicode(false);

                    b.Property<string>("SuplidorDescripcion")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("SuplidorDireccion")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("SuplidorEstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("SuplidorFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("SuplidorFechaModifica")
                        .HasColumnType("datetime");

                    b.Property<string>("SuplidorPais")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("SuplidorTelFax1")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("SuplidorTelOficina1")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("SuplidorTelOficina2")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("SuplidorTipo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("SuplidorUsuRegistro")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("SuplidorId");

                    b.ToTable("DDSuplidor");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdtipComprobante", b =>
                {
                    b.Property<decimal>("TcompId")
                        .HasColumnName("TCompID")
                        .HasColumnType("numeric(2, 0)");

                    b.Property<decimal?>("TcompCantidadCtrl")
                        .HasColumnName("TCompCantidadCtrl")
                        .HasColumnType("numeric(4, 0)");

                    b.Property<string>("TcompDescripcion")
                        .HasColumnName("TCompDescripcion")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("TcompEstatus")
                        .HasColumnName("TCompEstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("TcompFechaCrea")
                        .HasColumnName("TCompFechaCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TcompFechaModi")
                        .HasColumnName("TCompFechaModi")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TcompFechaValida")
                        .HasColumnName("TCompFechaValida")
                        .HasColumnType("datetime");

                    b.Property<string>("TcompImpuesto")
                        .HasColumnName("TCompImpuesto")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<decimal?>("TcompNumerador")
                        .HasColumnName("TCompNumerador")
                        .HasColumnType("numeric(8, 0)");

                    b.Property<decimal?>("TcompSecuenciaFin")
                        .HasColumnName("TCompSecuenciaFin")
                        .HasColumnType("numeric(8, 0)");

                    b.Property<decimal?>("TcompSecuenciaIni")
                        .HasColumnName("TCompSecuenciaIni")
                        .HasColumnType("numeric(8, 0)");

                    b.Property<string>("TcompSerie")
                        .HasColumnName("TCompSerie")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("TcompUsuCrea")
                        .HasColumnName("TCompUsuCrea")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("TcompUsuModi")
                        .HasColumnName("TCompUsuModi")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("TcompId");

                    b.ToTable("DDTipComprobante");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdtipoTraAju", b =>
                {
                    b.Property<int>("TraTipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TraTipoID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TraTipoAjuste")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("TraTipoDesc")
                        .HasMaxLength(75)
                        .IsUnicode(false);

                    b.Property<string>("TraTipoEstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("TraTipoFechaCrea")
                        .HasColumnType("datetime");

                    b.Property<string>("TratipoUsuCrea")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("TraTipoId");

                    b.ToTable("DDTipoTraAju");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdtraAjuInv", b =>
                {
                    b.Property<int>("TraAjuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TraAjuID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TraAjuCantidad");

                    b.Property<int?>("TraAjuCodId")
                        .HasColumnName("TraAjuCodID");

                    b.Property<DateTime?>("TraAjuFechaCrea")
                        .HasColumnType("datetime");

                    b.Property<string>("TraAjuProdId")
                        .HasColumnName("TraAjuProdID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("TraAjuUsuCrea")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("TraAjuId");

                    b.HasIndex("TraAjuCodId");

                    b.HasIndex("TraAjuProdId");

                    b.ToTable("DDTraAjuInv");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("Apellido");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("Estado");

                    b.Property<string>("Imagen");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("Nombre");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("RefreshToken");

                    b.Property<string>("Role");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdbalanceCc", b =>
                {
                    b.HasOne("Andamios.DOMAIN.Entities.Ddcliente", "CcbalCliente")
                        .WithMany("DdbalanceCc")
                        .HasForeignKey("CcbalClienteId")
                        .HasConstraintName("FK_DDBalanceCC_DDCliente");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdconDespDet", b =>
                {
                    b.HasOne("Andamios.DOMAIN.Entities.DdmaeInventario", "ConDespDetProd")
                        .WithMany("DdconDespDet")
                        .HasForeignKey("ConDespDetProdId")
                        .HasConstraintName("FK_DDConDespDet_DDMaeInventario");

                    b.HasOne("Andamios.DOMAIN.Entities.DdconDespEnc", "ConDespEnDet")
                        .WithMany("DdconDespDet")
                        .HasForeignKey("ConDespEnDetId")
                        .HasConstraintName("FK_DDConDespDet_DDConDespEnc");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdconDespEnc", b =>
                {
                    b.HasOne("Andamios.DOMAIN.Entities.Ddcliente", "ConDespEnCli")
                        .WithMany("DdconDespEnc")
                        .HasForeignKey("ConDespEnCliId")
                        .HasConstraintName("FK_DDConDespEnc_DDCliente");

                    b.HasOne("Andamios.DOMAIN.Entities.DdcotiEncabezado", "ConDespEnCoti")
                        .WithMany("DdconDespEnc")
                        .HasForeignKey("ConDespEnCotiId")
                        .HasConstraintName("FK_DDConDespEnc_DDCotiEncabezado");

                    b.HasOne("Andamios.DOMAIN.Entities.Ddproyecto", "ConDespEnProyecto")
                        .WithMany("DdconDespEnc")
                        .HasForeignKey("ConDespEnProyectoId")
                        .HasConstraintName("FK_DDConDespEnc_DDProyecto");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdconDevoDet", b =>
                {
                    b.HasOne("Andamios.DOMAIN.Entities.DdconDevoEnc", "ConDevoDetEn")
                        .WithMany("DdconDevoDet")
                        .HasForeignKey("ConDevoDetEnId")
                        .HasConstraintName("FK_DDConDevoDet_DDConDevoEnc");

                    b.HasOne("Andamios.DOMAIN.Entities.DdmaeInventario", "ConDevoProd")
                        .WithMany("DdconDevoDet")
                        .HasForeignKey("ConDevoProdId")
                        .HasConstraintName("FK_DDConDevoDet_DDMaeInventario");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdconDevoEnc", b =>
                {
                    b.HasOne("Andamios.DOMAIN.Entities.Ddcliente", "ConDevoEnCli")
                        .WithMany("DdconDevoEnc")
                        .HasForeignKey("ConDevoEnCliId")
                        .HasConstraintName("FK_DDConDevoEnc_DDCliente");

                    b.HasOne("Andamios.DOMAIN.Entities.DdconteoDevoEnc", "ConDevoEnCont")
                        .WithMany("DdconDevoEnc")
                        .HasForeignKey("ConDevoEnContId")
                        .HasConstraintName("FK_DDConDevoEnc_DDConteoDevoEnc");

                    b.HasOne("Andamios.DOMAIN.Entities.DdcotiEncabezado", "ConDevoEnCoti")
                        .WithMany("DdconDevoEnc")
                        .HasForeignKey("ConDevoEnCotiId")
                        .HasConstraintName("FK_DDConDevoEnc_DDCotiEncabezado");

                    b.HasOne("Andamios.DOMAIN.Entities.Ddproyecto", "ConDevoEnProyecto")
                        .WithMany("DdconDevoEnc")
                        .HasForeignKey("ConDevoEnProyectoId")
                        .HasConstraintName("FK_DDConDevoEnc_DDProyecto");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdconteoDespDet", b =>
                {
                    b.HasOne("Andamios.DOMAIN.Entities.DdconteoDespEnc", "ContDespDetEnc")
                        .WithMany("DdconteoDespDet")
                        .HasForeignKey("ContDespDetEncId")
                        .HasConstraintName("FK_DDConteoDespDet_DDConteoDespEnc");

                    b.HasOne("Andamios.DOMAIN.Entities.DdmaeInventario", "ContDespProd")
                        .WithMany("DdconteoDespDet")
                        .HasForeignKey("ContDespProdId")
                        .HasConstraintName("FK_DDConteoDespDet_DDMaeInventario");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdconteoDespEnc", b =>
                {
                    b.HasOne("Andamios.DOMAIN.Entities.Ddcliente", "ContDespEncCliente")
                        .WithMany("DdconteoDespEnc")
                        .HasForeignKey("ContDespEncClienteId")
                        .HasConstraintName("FK_DDConteoDespEnc_DDCliente");

                    b.HasOne("Andamios.DOMAIN.Entities.DdcotiEncabezado", "ContDespEncCoti")
                        .WithMany("DdconteoDespEnc")
                        .HasForeignKey("ContDespEncCotiId")
                        .HasConstraintName("FK_DDConteoDespEnc_DDCotiEncabezado");

                    b.HasOne("Andamios.DOMAIN.Entities.Ddproyecto", "ContDespEncProyecto")
                        .WithMany("DdconteoDespEnc")
                        .HasForeignKey("ContDespEncProyectoId")
                        .HasConstraintName("FK_DDConteoDespEnc_DDProyecto");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdconteoDevoDet", b =>
                {
                    b.HasOne("Andamios.DOMAIN.Entities.DdconteoDevoEnc", "ContDevoDetEnc")
                        .WithMany("DdconteoDevoDet")
                        .HasForeignKey("ContDevoDetEncId")
                        .HasConstraintName("FK_DDConteoDevoDet_DDConteoDevoEnc");

                    b.HasOne("Andamios.DOMAIN.Entities.DdmaeInventario", "ContDevoProd")
                        .WithMany("DdconteoDevoDet")
                        .HasForeignKey("ContDevoProdId")
                        .HasConstraintName("FK_DDConteoDevoDet_DDMaeInventario");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdconteoDevoEnc", b =>
                {
                    b.HasOne("Andamios.DOMAIN.Entities.Ddcliente", "ContDevoEncCliente")
                        .WithMany("DdconteoDevoEnc")
                        .HasForeignKey("ContDevoEncClienteId")
                        .HasConstraintName("FK_DDConteoDevoEnc_DDCliente");

                    b.HasOne("Andamios.DOMAIN.Entities.DdcotiEncabezado", "ContDevoEncCotiNavigation")
                        .WithMany("DdconteoDevoEnc")
                        .HasForeignKey("ContDevoEncCoti")
                        .HasConstraintName("FK_DDConteoDevoEnc_DDCotiEncabezado");

                    b.HasOne("Andamios.DOMAIN.Entities.Ddproyecto", "ContDevoEncProyecto")
                        .WithMany("DdconteoDevoEnc")
                        .HasForeignKey("ContDevoEncProyectoId")
                        .HasConstraintName("FK_DDConteoDevoEnc_DDProyecto");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdcontrolBal", b =>
                {
                    b.HasOne("Andamios.DOMAIN.Entities.DdbalanceCc", "BalCliente")
                        .WithMany("DdcontrolBal")
                        .HasForeignKey("BalClienteId")
                        .HasConstraintName("FK_DDControlBal_DDBalanceCC");

                    b.HasOne("Andamios.DOMAIN.Entities.Ddcliente", "BalClienteNavigation")
                        .WithMany("DdcontrolBal")
                        .HasForeignKey("BalClienteId")
                        .HasConstraintName("FK_DDControlBal_DDCliente");

                    b.HasOne("Andamios.DOMAIN.Entities.DdcotiEncabezado", "BalCoti")
                        .WithMany("DdcontrolBal")
                        .HasForeignKey("BalCotiId")
                        .HasConstraintName("FK_DDControlBal_DDCotiEncabezado");

                    b.HasOne("Andamios.DOMAIN.Entities.DdmaeInventario", "BalProd")
                        .WithMany("DdcontrolBal")
                        .HasForeignKey("BalProdId")
                        .HasConstraintName("FK_DDControlBal_DDMaeInventario");

                    b.HasOne("Andamios.DOMAIN.Entities.Ddproyecto", "BalProyecto")
                        .WithMany("DdcontrolBal")
                        .HasForeignKey("BalProyectoId")
                        .HasConstraintName("FK_DDControlBal_DDProyecto");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdcotiDetalle", b =>
                {
                    b.HasOne("Andamios.DOMAIN.Entities.DdcotiEncabezado", "CotiEnDe")
                        .WithMany("DdcotiDetalle")
                        .HasForeignKey("CotiEnDeId")
                        .HasConstraintName("FK_DDCotiDetalle_DDCotiEncabezado");

                    b.HasOne("Andamios.DOMAIN.Entities.DdmaeInventario", "CotiProd")
                        .WithMany("DdcotiDetalle")
                        .HasForeignKey("CotiProdId")
                        .HasConstraintName("FK_DDCotiDetalle_DDMaeInventario");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdcotiEncabezado", b =>
                {
                    b.HasOne("Andamios.DOMAIN.Entities.Ddcliente", "CotiEnCliente")
                        .WithMany("DdcotiEncabezado")
                        .HasForeignKey("CotiEnClienteId")
                        .HasConstraintName("FK_DDCotiEncabezado_DDCliente");

                    b.HasOne("Andamios.DOMAIN.Entities.Ddproyecto", "CotiEnProyecto")
                        .WithMany("DdcotiEncabezado")
                        .HasForeignKey("CotiEnProyectoId")
                        .HasConstraintName("FK_DDCotiEncabezado_DDProyecto");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DddepositoBal", b =>
                {
                    b.HasOne("Andamios.DOMAIN.Entities.Ddcliente", "CcdepBalCli")
                        .WithMany("DddepositoBal")
                        .HasForeignKey("CcdepBalCliId")
                        .HasConstraintName("FK_DDDepositoBal_DDCliente");

                    b.HasOne("Andamios.DOMAIN.Entities.Ddproyecto", "CcdepBalProyecto")
                        .WithMany("DddepositoBal")
                        .HasForeignKey("CcdepBalProyectoId")
                        .HasConstraintName("FK_DDDepositoBal_DDProyecto");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DddepositoBco", b =>
                {
                    b.HasOne("Andamios.DOMAIN.Entities.Ddbanco", "CcdepositoBancoNavigation")
                        .WithMany("DddepositoBco")
                        .HasForeignKey("CcdepositoBanco")
                        .HasConstraintName("FK_DDDepositoBco_DDBanco");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DddepositoCoti", b =>
                {
                    b.HasOne("Andamios.DOMAIN.Entities.Ddcliente", "CcdepReciboCli")
                        .WithMany("DddepositoCoti")
                        .HasForeignKey("CcdepReciboCliId")
                        .HasConstraintName("FK_DDDepositoCoti_DDCliente");

                    b.HasOne("Andamios.DOMAIN.Entities.DdreciboCc", "CcdepReciboOrig")
                        .WithMany("DddepositoCoti")
                        .HasForeignKey("CcdepReciboOrigId")
                        .HasConstraintName("FK_DDDepositoCoti_DDReciboCC");

                    b.HasOne("Andamios.DOMAIN.Entities.Ddproyecto", "CcdepReciboProyecto")
                        .WithMany("DddepositoCoti")
                        .HasForeignKey("CcdepReciboProyectoId")
                        .HasConstraintName("FK_DDDepositoCoti_DDProyecto");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DddetalleReciboCc", b =>
                {
                    b.HasOne("Andamios.DOMAIN.Entities.DdmovimientoCc", "CcdetalleReciboAltMovNavigation")
                        .WithMany("DddetalleReciboCc")
                        .HasForeignKey("CcdetalleReciboAltMov")
                        .HasConstraintName("FK_DDDetalleReciboCC_DDMovimientoCC");

                    b.HasOne("Andamios.DOMAIN.Entities.DdreciboCc", "Ccrecibo")
                        .WithMany("DddetalleReciboCc")
                        .HasForeignKey("CcreciboId")
                        .HasConstraintName("FK_DDDetalleReciboCC_DDReciboCC");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdfactDet", b =>
                {
                    b.HasOne("Andamios.DOMAIN.Entities.DdmaeInventario", "FactDetProd")
                        .WithMany("DdfactDet")
                        .HasForeignKey("FactDetProdId")
                        .HasConstraintName("FK_DDFactDet_DDMaeInventario");

                    b.HasOne("Andamios.DOMAIN.Entities.DdfactEnc", "FactEnDet")
                        .WithMany("DdfactDet")
                        .HasForeignKey("FactEnDetId")
                        .HasConstraintName("FK_DDFactDet_DDFactEnc");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdfactEnc", b =>
                {
                    b.HasOne("Andamios.DOMAIN.Entities.Ddcliente", "FactEnCliente")
                        .WithMany("DdfactEnc")
                        .HasForeignKey("FactEnClienteId")
                        .HasConstraintName("FK_DDFactEnc_DDCliente");

                    b.HasOne("Andamios.DOMAIN.Entities.DdconDespEnc", "FactEnConduce")
                        .WithMany("DdfactEnc")
                        .HasForeignKey("FactEnConduceId")
                        .HasConstraintName("FK_DDFactEnc_DDConDespEnc");

                    b.HasOne("Andamios.DOMAIN.Entities.DdcotiEncabezado", "FactEnCoti")
                        .WithMany("DdfactEnc")
                        .HasForeignKey("FactEnCotiId")
                        .HasConstraintName("FK_DDFactEnc_DDCotiEncabezado");

                    b.HasOne("Andamios.DOMAIN.Entities.Ddproyecto", "FactEnProyecto")
                        .WithMany("DdfactEnc")
                        .HasForeignKey("FactEnProyectoId")
                        .HasConstraintName("FK_DDFactEnc_DDProyecto");

                    b.HasOne("Andamios.DOMAIN.Entities.DdtipComprobante", "FactEnTipoComprobanteNavigation")
                        .WithMany("DdfactEnc")
                        .HasForeignKey("FactEnTipoComprobante")
                        .HasConstraintName("FK_DDFactEnc_DDTipComprobante");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdingInvDet", b =>
                {
                    b.HasOne("Andamios.DOMAIN.Entities.DdingInvEnc", "TraDeEnIng")
                        .WithMany("DdingInvDet")
                        .HasForeignKey("TraDeEnIngId")
                        .HasConstraintName("FK_DDIngInvDet_DDIngInvEnc");

                    b.HasOne("Andamios.DOMAIN.Entities.DdmaeInventario", "TraDeProd")
                        .WithMany("DdingInvDet")
                        .HasForeignKey("TraDeProdId")
                        .HasConstraintName("FK_DDIngInvDet_DDMaeInventario");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdingInvEnc", b =>
                {
                    b.HasOne("Andamios.DOMAIN.Entities.Ddsuplidor", "TraEnCodAge")
                        .WithMany("DdingInvEncTraEnCodAge")
                        .HasForeignKey("TraEnCodAgeId")
                        .HasConstraintName("FK_DDIngInvEnc_DDSuplidor1");

                    b.HasOne("Andamios.DOMAIN.Entities.Ddsuplidor", "TraEnCodSup")
                        .WithMany("DdingInvEncTraEnCodSup")
                        .HasForeignKey("TraEnCodSupId")
                        .HasConstraintName("FK_DDIngInvEnc_DDSuplidor");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdmaeInventario", b =>
                {
                    b.HasOne("Andamios.DOMAIN.Entities.DdclaseProd", "MinvClaseNavigation")
                        .WithMany("DdmaeInventario")
                        .HasForeignKey("MinvClase")
                        .HasConstraintName("FK_DDMaeInventario_DDClaseProd");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdpagoNoAp", b =>
                {
                    b.HasOne("Andamios.DOMAIN.Entities.Ddcliente", "CcpagoCliente")
                        .WithMany("DdpagoNoAp")
                        .HasForeignKey("CcpagoClienteId")
                        .HasConstraintName("FK_DDPagoNoAp_DDCliente1");

                    b.HasOne("Andamios.DOMAIN.Entities.Ddproyecto", "CcpagoProyecto")
                        .WithMany("DdpagoNoAp")
                        .HasForeignKey("CcpagoProyectoId")
                        .HasConstraintName("FK_DDPagoNoAp_DDProyecto");

                    b.HasOne("Andamios.DOMAIN.Entities.DdreciboCc", "CcpagoRecibo")
                        .WithMany("DdpagoNoAp")
                        .HasForeignKey("CcpagoReciboId")
                        .HasConstraintName("FK_DDPagoNoAp_DDReciboCC");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.Ddproyecto", b =>
                {
                    b.HasOne("Andamios.DOMAIN.Entities.Ddcliente", "ProCliente")
                        .WithMany("Ddproyecto")
                        .HasForeignKey("ProClienteId")
                        .HasConstraintName("FK_DDProyecto_DDCliente1");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdreciboCc", b =>
                {
                    b.HasOne("Andamios.DOMAIN.Entities.Ddcliente", "CcreciboCli")
                        .WithMany("DdreciboCc")
                        .HasForeignKey("CcreciboCliId")
                        .HasConstraintName("FK_DDReciboCC_DDCliente");
                });

            modelBuilder.Entity("Andamios.DOMAIN.Entities.DdtraAjuInv", b =>
                {
                    b.HasOne("Andamios.DOMAIN.Entities.DdtipoTraAju", "TraAjuCod")
                        .WithMany("DdtraAjuInv")
                        .HasForeignKey("TraAjuCodId")
                        .HasConstraintName("FK_DDTraAjuInv_DDTipoTraAju");

                    b.HasOne("Andamios.DOMAIN.Entities.DdmaeInventario", "TraAjuProd")
                        .WithMany("DdtraAjuInv")
                        .HasForeignKey("TraAjuProdId")
                        .HasConstraintName("FK_DDTraAjuInv_DDMaeInventario");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Andamios.DOMAIN.Entities.Usuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Andamios.DOMAIN.Entities.Usuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Andamios.DOMAIN.Entities.Usuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Andamios.DOMAIN.Entities.Usuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
